<<<<<<< HEAD
# Generated by Django 2.2.17 on 2020-11-18 14:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='KotdaRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('featured_image', models.ImageField(null=True, upload_to='feature_image')),
                ('banner_image', models.ImageField(null=True, upload_to='banner_image')),
                ('type', models.CharField(choices=[('Investor journey', 'Investor journey'), ('Key events', 'Key events'), ('Project milestones', 'Project milestones'), ('Innovation ecosystem', 'Innovation ecosystem')], max_length=50)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('featured_image', models.ImageField(null=True, upload_to='uploads/photos/%Y/%m/')),
                ('badge_image', models.ImageField(null=True, upload_to='badge_image')),
                ('type', models.CharField(choices=[('Personal Development', 'Personal Development'), ('Professional Development', 'Professional Development'), ('Magazines', 'Magazines')], max_length=50)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('experience_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Expert', 'Expert')], default='Beginner', max_length=50)),
                ('language', models.CharField(max_length=50, verbose_name='language')),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceEnrolment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('summary', models.TextField(blank=True, max_length=500, verbose_name='summary')),
                ('video_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='video url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('summary', models.TextField(blank=True, max_length=500, verbose_name='summary')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.KotdaRepository')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Department')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.KotdaRepository')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleVideoUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_video', models.CharField(max_length=50, verbose_name='name of website')),
                ('video_url', models.URLField(max_length=250, verbose_name='video url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleReferenceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_website', models.CharField(max_length=50, verbose_name='name of website')),
                ('reference_material_url', models.URLField(max_length=250, verbose_name='reference material url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_image', models.CharField(max_length=50, verbose_name='name of document')),
                ('image', models.ImageField(upload_to='repoImages/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_document', models.CharField(max_length=50, verbose_name='name of document')),
                ('reference_material_download', models.FileField(upload_to='repoDownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='bio')),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Department', verbose_name='department')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Role', verbose_name='role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('summary', models.TextField(max_length=500, verbose_name='summary')),
                ('body', models.TextField(max_length=5000, verbose_name='body')),
                ('document_for_download', models.FileField(upload_to='repoDownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleReferenceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_website', models.CharField(max_length=50, verbose_name='name of website')),
                ('reference_material_url', models.URLField(max_length=250, verbose_name='reference material url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_document', models.CharField(max_length=50, verbose_name='name of document')),
                ('reference_material_download', models.FileField(upload_to='LRMdownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceEnrolment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Poll')),
            ],
        ),
    ]
=======
# Generated by Django 2.2.17 on 2020-11-18 14:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='KotdaRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('featured_image', models.ImageField(null=True, upload_to='feature_image')),
                ('banner_image', models.ImageField(null=True, upload_to='banner_image')),
                ('type', models.CharField(choices=[('Investor journey', 'Investor journey'), ('Key events', 'Key events'), ('Project milestones', 'Project milestones'), ('Innovation ecosystem', 'Innovation ecosystem')], max_length=50)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('featured_image', models.ImageField(null=True, upload_to='uploads/photos/%Y/%m/')),
                ('badge_image', models.ImageField(null=True, upload_to='badge_image')),
                ('type', models.CharField(choices=[('Personal Development', 'Personal Development'), ('Professional Development', 'Professional Development'), ('Magazines', 'Magazines')], max_length=50)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('experience_level', models.CharField(choices=[('Beginner', 'Beginner'), ('Intermediate', 'Intermediate'), ('Expert', 'Expert')], default='Beginner', max_length=50)),
                ('language', models.CharField(max_length=50, verbose_name='language')),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceEnrolment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('summary', models.TextField(blank=True, max_length=500, verbose_name='summary')),
                ('video_url', models.URLField(blank=True, max_length=250, null=True, verbose_name='video url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('summary', models.TextField(blank=True, max_length=500, verbose_name='summary')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.KotdaRepository')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, max_length=500, verbose_name='description')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Department')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('repository', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.KotdaRepository')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleVideoUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_video', models.CharField(max_length=50, verbose_name='name of website')),
                ('video_url', models.URLField(max_length=250, verbose_name='video url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleReferenceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_website', models.CharField(max_length=50, verbose_name='name of website')),
                ('reference_material_url', models.URLField(max_length=250, verbose_name='reference material url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_image', models.CharField(max_length=50, verbose_name='name of document')),
                ('image', models.ImageField(upload_to='repoImages/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='RepositoryModuleDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_document', models.CharField(max_length=50, verbose_name='name of document')),
                ('reference_material_download', models.FileField(upload_to='repoDownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.RepositoryModule')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='bio')),
                ('country', models.CharField(blank=True, max_length=30, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('email_confirmed', models.BooleanField(default=False)),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Department', verbose_name='department')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Role', verbose_name='role')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('summary', models.TextField(max_length=500, verbose_name='summary')),
                ('body', models.TextField(max_length=5000, verbose_name='body')),
                ('document_for_download', models.FileField(upload_to='repoDownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Private', max_length=50)),
                ('publish_status', models.CharField(choices=[('Draft', 'Draft'), ('Submitted', 'Submitted'), ('Published', 'Published'), ('Rejected', 'Rejected')], default='Draft', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResource')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
                ('viewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleReferenceUrl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_website', models.CharField(max_length=50, verbose_name='name of website')),
                ('reference_material_url', models.URLField(max_length=250, verbose_name='reference material url')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_document', models.CharField(max_length=50, verbose_name='name of document')),
                ('reference_material_download', models.FileField(upload_to='LRMdownloads/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Protected', 'Protected'), ('Private', 'Private')], default='Public', max_length=50)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='LearningResourceModuleCompletion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('learner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceEnrolment')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LearningResourceModule')),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=200)),
                ('votes', models.IntegerField(default=0)),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Poll')),
            ],
        ),
    ]
>>>>>>> deployment-backup
